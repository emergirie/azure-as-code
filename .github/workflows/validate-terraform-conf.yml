name: validate-terraform-conf
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  integrate:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        working-directory: ./windows-virtual-desktop/current/terraform
    steps:
      - uses: actions/checkout@v2

      - name: Initialize environment
        uses: Azure/powershell@v1
        with:
          inlineScript: terraform init
          azPSVersion: latest

      - name: Format configuration
        uses: Azure/powershell@v1
        with:
          inlineScript: terraform fmt
          azPSVersion: latest

      - name: Create execution plan
        uses: Azure/powershell@v1
        with:
          inlineScript: terraform plan `
              -var aad_tenant_id=${{ secrets.AAD_TENANT_ID }} `
              -var subscription_id=${{ secrets.SUBSCRIPTION_ID }} `
              -var terraform_sp='{\"client_id\":\"${{ secrets.SP_DEV_TERRAFORM_ID }}\",\"client_secret\":\"${{ secrets.SP_DEV_TERRAFROM_SECRET }}\"}' `
              -var wvd_domain_join_account='{\"username\":\"${{ secrets.SP_JOINDOMAIN_ID }}\",\"password\":\"${{ secrets.SP_JOINDOMAIN_SECRET }}\"}' `
              -var wvd_local_admin_account='{\"username\":\"${{ secrets.SP_LOCALADMIN_ID }}\",\"password\":\"${{ secrets.SP_LOCALADMIN_SECRET }}\"}'          
          azPSVersion: latest
          
      - name: Apply execution plan
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: Azure/powershell@v1
        with:
          inlineScript: terraform apply -auto-approve `
              -var aad_tenant_id=${{ secrets.AAD_TENANT_ID }} `
              -var subscription_id=${{ secrets.SUBSCRIPTION_ID }} `
              -var terraform_sp='{\"client_id\":\"${{ secrets.SP_DEV_TERRAFORM_ID }}\",\"client_secret\":\"${{ secrets.SP_DEV_TERRAFROM_SECRET }}\"}' `
              -var wvd_domain_join_account='{\"username\":\"${{ secrets.SP_JOINDOMAIN_ID }}\",\"password\":\"${{ secrets.SP_JOINDOMAIN_SECRET }}\"}' `
              -var wvd_local_admin_account='{\"username\":\"${{ secrets.SP_LOCALADMIN_ID }}\",\"password\":\"${{ secrets.SP_LOCALADMIN_SECRET }}\"}'          
          azPSVersion: latest
